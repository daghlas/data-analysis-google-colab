# -*- coding: utf-8 -*-
"""hellocolab.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lwB12uxcXQwDtyuqrUMf6kS7hB9nnDfj
"""

from google.colab import drive
drive.mount('/content/drive')

with open('/content/drive/My Drive/foo.txt', 'w') as f:
  f.write('Hello Google Drive! Welcome to Colab')
!cat /content/drive/My\ Drive/foo.txt

drive.flush_and_unmount
print('All changes now visible in drive')

print('hello python')

x = 10
y = 20
sum = (x+y)
print(sum)

string = "This is my"
string2 = "first day with colab"
print(string,string2)

#import pandas as pd
#from google.colab import files
#uploaded = files.upload()

!pip install --upgrade xlrd

import pandas as pd
import matplotlib.pyplot as plt

data_frame = pd.io.excel.read_excel('/content/drive/MyDrive/Colaboratory/height.xls')
data_frame.head()

data_frame.describe()

age = data_frame['age']
plt.hist(age)
plt.show()

data_frame.isnull().sum()

data_frame.hand.replace({0:'R', 1:'L'}, inplace=True)

data_frame.head(7)

data_frame.columns

p = data_frame['hand'].value_counts()
plt.pie(p)
plt.show

p = data_frame['hand'].value_counts()
p.head()

data_frame.sex.replace({'f':'F','Mm':'M'}, inplace=True)

data_frame.head(8)

data_frame.dad_hand.replace({'l':'L','r':'R'},inplace=True)

data_frame.mom_hand.replace({'l':'L','r':'R'},inplace=True)

data_frame.head()

data_frame.weight.isnull().sum()
data_frame.weight.fillna(0, inplace=True)

heightM = data_frame.height*0.0254
weightP = data_frame.weight*0.4536
data_frame['BMI'] = (weightP / (heightM * heightM))
data_frame.head()

data_frame.BMI.median()

data_frame.BMI.mean()

data_frame.BMI.describe()

x = data_frame.dad_height
y = data_frame.mom_height

plt.scatter(x,y)
plt.show

#data_frame.hand.replace({'R':0, 'L':1}, inplace=True)
#x = data_frame.weight
#y = data_frame.hand

#plt.boxplot(x,y)
#plt.show

import numpy as np

def categorise(row):  
    if row['BMI'] <= 18.4:
        return 'under'
    elif row['BMI'] >= 18.5 and row['BMI'] < 24.9:
        return 'normal'
    elif row['BMI'] > 24.9:
      return 'over'

data_frame['BMIcat'] = data_frame.apply(lambda row: categorise(row), axis=1)
data_frame.head()

x = data_frame['BMIcat']
y = data_frame.BMI

plt.bar(x,y)
plt.show

data_frame.weight.fillna(0, inplace=True)
data_frame.loc[[25]]

(data_frame.BMIcat == ('under')).sum()

#((data_frame.sex == ('M')).sum() ,(data_frame.BMIcat == ('over')).sum())
sB = data_frame[['sex','BMIcat']].value_counts()['M','over']
print(sB)

(data_frame.BMIcat == ('normal')).sum()

data_frame[['BMIcat', 'sex']].value_counts()

#data_frame.filter(like = 'sex', axis=1).melt().value_counts('value')
#data_frame.filter(like = 'sex', axis=1).value_counts()
data_frame['sex'].value_counts()

data_frame['gender'] = data_frame.apply(lambda row: row.sex, axis=1)

data_frame.gender.replace({'M':'Male','F':'Female'}, inplace = True)
data_frame.head()

(data_frame.age >= (30)).sum()

data_frame[['hand', 'gender','BMIcat']].value_counts()['R','Female','normal']

a = len(data_frame[(data_frame['age'] >= 30) & (data_frame['hand'] == 'R') & (data_frame['gender'] == 'Female') & (data_frame['BMIcat'] == 'normal')])
print(a)

perc = (a/70)*100
print(perc)

weight = data_frame['weight']
hand = data_frame['hand']

plt.boxplot(weight)